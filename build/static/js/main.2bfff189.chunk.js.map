{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Message.js","App.js","serviceWorker.js","index.js"],"names":["Persons","props","matcher","persons","map","p","className","key","id","name","number","onClick","filtered","filter","toLowerCase","includes","length","Filter","value","onChange","onMatcherChange","PersonForm","onSubmit","onNameChange","onNumberChange","type","baseUrl","getAll","a","axios","get","response","data","create","newObject","post","update","put","deleteItem","delete","Message","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setMatcher","setMessage","setClassName","useEffect","personService","then","event","target","preventDefault","nameObject","o","person","window","confirm","personNewNumber","catch","error","setTimeout","updateNumber","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.2bfff189.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n  if (props.matcher === '') {\r\n    return (\r\n      props.persons.map(p => \r\n        <li className='person' key={p.id}>\r\n        {p.name} {p.number} \r\n        <button onClick={() => props.onClick(p.name, p.id)} key={p.id}>delete</button>\r\n        </li>)\r\n    )\r\n  }\r\n  const filtered = props.persons.filter(p => p.name.toLowerCase().includes(props.matcher.toLowerCase())) \r\n  if (filtered.length === 0) {\r\n    return (\r\n      <div>No results</div>\r\n    )\r\n  } else {\r\n    return (\r\n      filtered.map(p => \r\n      <li className='person' key={p.id}>\r\n        {p.name} {p.number}\r\n      </li>)\r\n    )\r\n  }\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n      <form >\r\n        <div>filter shown with <input value={props.matcher} onChange={props.onMatcherChange}/></div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.onSubmit}>\r\n        <div>name: <input value={props.name} onChange={props.onNameChange}></input></div>\r\n        <div>number: <input value={props.number} onChange={props.onNumberChange}></input></div>\r\n        <div><button type=\"submit\">add</button></div>\r\n      </form>\r\n    )\r\n  }\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n    const response = await axios.post(baseUrl, newObject)\r\n    return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n    const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n    return response.data\r\n}\r\n\r\nconst deleteItem = async (id) => {\r\n    const response = await axios.delete(`${baseUrl}/${id}`)\r\n    return response.data\r\n}\r\n\r\nexport default {getAll, create, update, deleteItem}","import React from 'react'\r\n\r\nconst Message = (props) => {\r\n    if (props.message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={props.className}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React, { useEffect, useState } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Message from './components/Message'\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [matcher, setMatcher] = useState('')\n  const [message, setMessage] = useState(null)\n  const [className, setClassName] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }, [])\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleMatcherChange = (event) => {\n    setMatcher(event.target.value)\n  }\n\n  const handleClick = (name, id) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n      .deleteItem(id)\n      .then(\n        personService.getAll()\n        .then(persons => setPersons(persons))\n      ).catch(error => {\n        setMessage(\n          `Information of ${name} had already been removed from server`\n        )\n        setClassName('error')\n        setTimeout(() => {\n          setMessage(null)\n          setClassName('')\n        }, 2000)\n      })\n    }\n  }\n\n  const updateNumber = (person) => {\n    if (window.confirm(`${person.name} is already added to the phonebook, replace the old number with a new one?`)) {\n      const personNewNumber = {name: person.name, number: newNumber, id: person.id}\n      personService\n        .update(person.id, personNewNumber)\n        .then(response => {\n          setPersons(persons.map(p => p.id !== response.id ? p : response))\n        })\n        .catch(error => {\n          setMessage(`Information of ${person.name} has already been removed from server`)\n          setClassName('error')\n          setTimeout(() => {\n            setMessage(null)\n            setClassName('')\n          }, 2000)\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    const filtered = persons.filter(o => o.name === nameObject.name)\n    if (filtered.length === 1) {\n      updateNumber(filtered[0])\n    } else {\n      personService\n        .create(nameObject)\n        .then(() => {\n          personService\n            .getAll()\n            .then(persons => setPersons(persons))\n        })\n        setMessage(`Added ${nameObject.name}`)\n        setClassName('success')\n        setTimeout(() => {\n          setMessage(null)\n          setClassName('')\n        }, 2000)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message} className={className}/>\n      <Filter matcher={matcher} onMatcherChange={handleMatcherChange} />\n      <h3>add a new</h3>\n      <PersonForm onSubmit={addPerson}\n                  name={newName} \n                  onNameChange={handleNameChange}\n                  number={newNumber}\n                  onNumberChange={handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons persons={persons} \n               matcher={matcher}\n               onClick={handleClick} />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}