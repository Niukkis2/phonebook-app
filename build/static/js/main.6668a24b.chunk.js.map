{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","props","persons","map","person","key","id","name","number","onClick","Filter","value","matcher","onChange","onMatcherChange","PersonForm","onSubmit","onNameChange","onNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","notification","className","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setMatcher","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","includes","event","target","preventDefault","existing","find","window","confirm","returnedPerson","addedPerson","concat","catch","error","console","log","toDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6668a24b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n    return (\r\n        props.persons.map(person =>\r\n            <p key={person.id}>\r\n                {person.name} {person.number}\r\n                <button onClick={() => props.onClick(person.id)}>delete</button>\r\n            </p>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n      <form >\r\n        <div>filter shown with <input value={props.matcher} onChange={props.onMatcherChange}/></div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.onSubmit}>\r\n        <div>name: <input value={props.name} onChange={props.onNameChange}></input></div>\r\n        <div>number: <input value={props.number} onChange={props.onNumberChange}></input></div>\r\n        <div><button type=\"submit\">add</button></div>\r\n      </form>\r\n    )\r\n  }\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {\r\n      return response.data\r\n    })\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteItem = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, deleteItem}","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={notification.type}>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [matcher, setMatcher] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }, [])\n\n  const notifyWith = (message, type) => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 2000)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleMatcherChange = (event) => {\n    setMatcher(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    const toDelete = persons.find(p => p.id === id)\n    if(window.confirm(`Delete ${toDelete.name}`)) {\n      personService.deleteItem(id).then(response => {\n        setPersons(persons.filter(p => p.id !== id))\n        notifyWith(`Deleted ${toDelete.name}`, 'success')\n      }).catch(() => {\n        setPersons(persons.filter(p => p.id !== id))\n        notifyWith(`${toDelete.name} had already been removed`, 'error')\n      })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existing = (persons.find(p => p.name === newName))\n    if (existing) {\n      if (window.confirm(`${existing.name} is already added to the phonebook, replace the old number with a new one?`)) {\n        personService.update(existing.id, {\n          name: existing.name,\n          number: newNumber\n        }).then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== existing.id ? person : returnedPerson))\n          notifyWith(`Changed number of ${existing.name}`, 'success')\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n    } else {\n      personService.create({\n        name: newName,\n        number: newNumber\n      }).then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        notifyWith(`Added ${newName}`, 'success')\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        console.log(error.response.data.error)\n        notifyWith(`${error.response.data.error} `, 'error')\n      })\n    }\n  }\n  \n  const personsToShow = matcher.length === 0 ? persons : persons.filter(p => p.name.toLowerCase().includes(matcher.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}/>\n      <Filter matcher={matcher} onMatcherChange={handleMatcherChange} />\n      <h3>add a new</h3>\n      <PersonForm onSubmit={addPerson}\n                  name={newName} \n                  onNameChange={handleNameChange}\n                  number={newNumber}\n                  onNumberChange={handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow}\n               onClick={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}